return {
  --   {
  --     "CopilotC-Nvim/CopilotChat.nvim",
  --     branch = "main",
  --     cmd = "CopilotChat",
  --     opts = function()
  --       local user = vim.env.USER or "User"
  --       return {
  --         question_header = " " .. user .. " ",
  --         answer_header = " Copilot ",
  --         prompts = {
  --           -- Explain = {
  --           --   prompt = "Write an explanation for the selected code as paragraphs of text.",
  --           --   system_prompt = "COPILOT_EXPLAIN",
  --           -- },
  --           -- Review = {
  --           --   prompt = "Review the selected code.",
  --           --   system_prompt = "COPILOT_REVIEW",
  --           -- },
  --           -- Fix = {
  --           --   prompt = "There is a problem in this code. Identify the issues and rewrite the code with fixes. Explain what was wrong and how your changes address the problems.",
  --           -- },
  --           -- Optimize = {
  --           --   prompt = "Optimize the selected code to improve performance and readability. Explain your optimization strategy and the benefits of your changes.",
  --           -- },
  --           -- Docs = {
  --           --   prompt = "Please add documentation comments to the selected code.",
  --           -- },
  --           -- Tests = {
  --           --   prompt = "Please generate tests for my code.",
  --           -- },
  --           TestJS = {
  --             prompt = [[
  -- Write a test file for this file using vitest:
  --
  -- - Use let instead of const
  -- - Use test instead of describe
  -- - Use assert instead of expect
  -- - Test file should be named with `_test` instead of `.test`
  -- - Write one test function
  -- - Only mock functions that start with use
  -- - Use language file for tests where applicable
  -- - Do not use beforeEach
  -- - Test should be labeled the component or function name
  -- - Use concise variable names
  -- - Don't use comments
  --
  -- Ask if you need to see more files.
  --                     ]],
  --             context = "buffer",
  --           },
  --           Commit = {
  --             prompt = [[
  -- Write a git commit message. Follow these rules:
  --
  -- - The title should be 50 chars or less and capitalized.
  -- - The description should start with 'Includes:' followed by a blank line and then a dashed list of changed.
  -- - Write your commit message in the imperative.
  -- - Use tick marks around variable and file names.
  -- - Be concise and avoid redundancy.
  --
  -- Output only the commit message without any explanations and follow-up suggestions.
  --                     ]],
  --             context = "git:staged",
  --           },
  --         },
  --       }
  --     end,
  --     keys = {
  --       {
  --         "<leader>aa",
  --         function()
  --           return require("CopilotChat").toggle()
  --         end,
  --         desc = "Toggle (CopilotChat)",
  --         mode = { "n", "v" },
  --       },
  --       {
  --         "<leader>aq",
  --         function()
  --           vim.ui.input({
  --             prompt = "Quick Chat: ",
  --           }, function(input)
  --             if input ~= "" then
  --               require("CopilotChat").ask(input)
  --             end
  --           end)
  --         end,
  --         desc = "Quick Chat (CopilotChat)",
  --         mode = { "n", "v" },
  --       },
  --       {
  --         "<leader>ap",
  --         function()
  --           require("CopilotChat").select_prompt()
  --         end,
  --         desc = "Prompt Actions (CopilotChat)",
  --         mode = { "n", "v" },
  --       },
  --     },
  --   },
}
